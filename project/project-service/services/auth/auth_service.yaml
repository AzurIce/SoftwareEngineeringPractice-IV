services:
  auth:
    container_name: auth-services
    build: .
    develop:
      watch:
        - path: ./
          action: rebuild
    volumes:
      - ./docker/config.yml:/app/config.yml
    depends_on:
      auth_psql:
        condition: service_healthy
    labels: 
      - "traefik.http.middlewares.auth.forwardauth.address=http://auth:4000/api/auth/authorize"
      - "traefik.http.middlewares.auth.forwardauth.trustForwardHeader=true"
      - "traefik.http.routers.auth.rule=PathPrefix(`/api/auth/`)"
      - "traefik.http.services.auth.loadbalancer.server.port=4000"

  auth_psql:
    container_name: auth-pgsql
    image: postgres:alpine
    volumes:
      - ./docker/pgsql/data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      timeout: 45s
      interval: 10s
      retries: 2
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: root
      POSTGRES_DB: auth
      PGDATA: /auth/data 